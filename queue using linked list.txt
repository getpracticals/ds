#include<iostream> using namespace std; class linkqueue
{
public: struct node
{
int data;
struct node *next;
};
node *front = NULL; node *rear = NULL; void enqueue(int x)
{
node *tmp, *q; tmp=new node; tmp->data=x; tmp->next=NULL;
if(front==NULL && rear==NULL)
{
front=rear=tmp;
}
else
{
rear->next=tmp; rear=tmp;

}
}
void dequeue()
{
struct node *tmp=front; if(front==NULL)
{
cout<<"Queue is empty\n\n";
}
cout<<"Deleted\n"; if(front==rear)
{
front=rear=NULL;
}
else
{
front=front->next;
}
}
void display()

{
if(front==NULL)

{

cout<<"Queue is empty.\n\n";
}
else
{
node *ptr; ptr=front; cout<<"Queue :\n"; while(ptr!=NULL)
{
cout<<ptr->data<<"\t"; cout<<"\n";
ptr=ptr->next;
}
}
}
};

int main()
{
linkqueue q; int ch,x,n; do
{
cout<<"1.Enqueue\n2.Dequeue\n3.Display\n4.Exit\n"; cout<<"Enter the value for operation :\n"; cin>>ch;
switch(ch)
{
case 1:
cout<<"Enter the value :\n"; cin>>x;
q.enqueue(x); break;
case 2:
q.dequeue(); break;
case 3:
q.display(); break;
case 4:
break; default:
cout<<"\nWrong choice.\n\n";
}
}
while(n!=4);
return 0;}
